

  Tuesday, 06/03/2014
  ===================


  Getting Started with Intel Galileo
  ==================================

Intel Galileo Getting Started v006 from now on IGGSv6 (pdf) https://communities.intel.com/docs/DOC-21838

Galileo_GettingStarted_329685_006.pdf (file:///digital/g/projects/platforms/galileo/docs/Galileo_GettingStarted_329685_006.pdf)


	Important Information
	=====================

- You must use a power supply to power the board! You will damage the board if you power it with a USB cable.
- Always connect the 5V power before any other connection


	Setting Up the IDE
	==================

Intel Galileo Software Downloads - Drivers (Software package release version 1.0.0)  https://communities.intel.com/docs/DOC-22226

We used the 'Intel Galileo Arduino SW 1.5.3 on Linux64bit' version of the IDE http://downloadmirror.intel.com/23171/eng/Intel_Galileo_Arduino_SW_1.5.3_on_Linux64bit_v1.0.0.tgz

Installation and launch of the IDE is straight forward (required space is 298M):

- wget http://downloadmirror.intel.com/23171/eng/Intel_Galileo_Arduino_SW_1.5.3_on_Linux64bit_v1.0.0.tgz
- tar -xzf Intel_Galileo_Arduino_SW_1.5.3_on_Linux64bit_v1.0.0.tgz
- cd arduino-1.5.3
- ./arduino


	Setting Up the Board
	====================

We always start with the Intel Galileo board disconnected from everything.

- Connect power cable
- Connect USB cable
- Start IDE (you will probably need root privilege to connect to /dev/ttyAMC0 port)
- Select board: Tools > Board > Intel Galileo
- Select serial port: Tools > Serial Port (/dev/ttyAMC0)
- Install drivers and other software (IGGSv6 section 4)
- Update firmware (IGGSv6 section 6)


	Testing (No SD)
	===============

To test the board we run the 'Blink' test application.

We always start with the Intel Galileo board disconnected from everything.

- Connect power cable
- Connect USB cable
- Start IDE (you will probably need root privilege to connect to /dev/ttyAMC0 port)
- Open 'Blink' example: File > Examples > 01.Basics > Blink
- Select board: Tools > Board > Intel Galileo
- Select serial port: Tools > Serial Port (/dev/ttyAMC0)
- Upload the program

You should now see the GP led blinking

- Close IDE
- Remove USB cable
- Remove power cable


	Testing (With SD)
	=================


		Setting up the framework for cross-compiling
		============================================

The cross-compilation framework is set up by copying the libraries and gcc binaries from the IDE environment and using a custom Makfile provided by tokoro10g ()
https://github.com/tokoro10g/galileo-makefile

- cd /where/you/extracted/the/archive/arduino-1.5.3
- cd hardware/tools/sysroots
- mkdir -p /digital/g/opt/i586-poky-linux-uclibc-x-tools
- cp -R i586-poky-linux-uclibc/* /digital/g/opt/i586-poky-linux-uclibc-x-tools/
- cp -R i586-pokysdk-linux/* /digital/g/opt/i586-poky-linux-uclibc-x-tools/


		Setting up the SD card
		======================

Instructions can be found in IGGSv6 section 11

The image for the SD card can be download from https://communities.intel.com/docs/DOC-22226

LINUX IMAGE FOR SD for Intel Galileo (to enable Wi-Fi) http://downloadmirror.intel.com/23171/eng/LINUX_IMAGE_FOR_SD_Intel_Galileo_v1.0.0.7z

Setting up the SD card requires 342M:

- wget http://downloadmirror.intel.com/23171/eng/LINUX_IMAGE_FOR_SD_Intel_Galileo_v1.0.0.7z
- 7z x LINUX_IMAGE_FOR_SD_Intel_Galileo_v1.0.0.7z -oSD_IMAGE
- cp ./SD_IMAGE/* /my/sd/card/mount/dir/


		Connect the Board
		=================

- Connect power cable
- Connect Ethernet cable

If everything is fine you should see


		Test the Board
		==============

To connect to the board you need to know its IP address, for this example we assume it is 10.10.10.100

To test we can just run a "Hello world!" C example 

- Write "Hello world" program
- Cross compile using the cross-compile framework described above
- Copy binary to the board: scp hello root@10.10.10.100:/home/xuser/
- Remotely execute binary: ssh root@10.10.10.100 /home/xuser/hello

If everything is fine you should see "Hello world" in your screen as a result of the remote execution of the binary.

- Remove Ethernet cable
- Remove power cable


  Platform Benchmarking
  =====================

We need a set of benchmark applications to test performance and power consumption of each platform


	Benchmarks
	==========

The first set of applications we are going to use for benchmarking are the ones of the MiBench Benchmark http://www.eecs.umich.edu/mibench/

Source code and data http://www.eecs.umich.edu/mibench/source.html

The source code needs to be cross-compiled that is why new Makefiles were generated by combining the Makefiles provided from the benchmark suite and the Makefile of tokoro10g (see Setting up the framework for cross-compiling). The new Makefiles are named as 'Makefile.galileo'


  SSH Tunneling
  =============


	Tunneling Guide
	===============

- login to router
- setup static IP
- Go to NAT/QoS and setup port forwarding


	Connect Information
	===================

Hostname	IpAddress		MAC				Port

galileo1		192.168.1.50		98:4F:EE:00:64:27		8050




