= Fault Tree Analysis


== 1. Node cannot communicate with entry node at WAN

OR
  `+-- 1. Entry node is down or restarting
   +-- 2. Failure of physical infrastructure 
   |  `OR
   |     `+-- 1. Connection medium problem
   |      |  `OR
   |      |     `+-- 1. Cable problem
   |      |      +-- 2. Weather conditions prevent wireless communication
   |      |      +-- 3. Interference prevent communication
   |      |         `OR
   |      |            `+-- 1. Unintentional (Other nodes or urban wireless
   |      |             |      networks)
   |      |             +-- 2. Intentional (Denial-Of-Service attack)
   |      |
   |      +-- 2. Network device problem (Ethernet, Wireless Card, etc)
   |         `OR
   |            `+-- 1. USB infrastructure problem (for networking over usb)
   |             +-- 2. Ethernet controller problem
   |             +-- 3. Wireless card problem
   |
   +-- 3. Package forwarding problem (DNS, change of IP address) 

=== Detection 

==== 1.1
  To detect if it is only the entry node that we can not reach we can try
  to ping a number of other addresses and see if we get any replies. The 
  addresses can be a mixture of public services (e.g. google.com) and 
  private (e.g. bishop @ anl.gov)

  If we get a reply we should initially assume that the entry node is
  restarting and either attempt to access another entry node or wait and
  retry. After <N> steps of that process we may send a notification 
  e-mail to the administration to inform that there is a possible problem
  with the cloud infrastructure.

  If we do not get a reply we should proceed with checking for other 
  possible failures.

==== 1.2.1.1
==== 1.2.1.2
==== 1.2.1.3.1
==== 1.2.1.3.2
==== 1.2.2.1
==== 1.2.2.2
==== 1.2.2.3
==== 1.3
  A problem at the package forwarding layer can be detected in way similar
  to the one of 1.1 . If a mistake is detected an attempt to update the 
  information can be performed and attempt to continue execution.
   

== 2. Node cannot communicate with node inside LAN 

OR
  `+-- 1. Entry node is down or restarting
   +-- 2. Failure of physical infrastructure 
   |  `OR
   |     `+-- 1. Connection medium problem
   |      |  `OR
   |      |     `+-- 1. Cable problem
   |      |      +-- 2. Weather conditions prevent wireless communication
   |      |      +-- 3. Interference prevent communication
   |      |         `OR
   |      |            `+-- 1. Unintentional (Other nodes or urban wireless
   |      |             |      networks)
   |      |             +-- 2. Intentional (Denial-Of-Service attack)
   |      |
   |      +-- 2. Network device problem (Ethernet, Wireless Card, etc)
   |         `OR
   |            `+-- 1. USB infrastructure problem (for networking over usb)
   |             +-- 2. Ethernet controller problem
   |             +-- 3. Wireless card problem
   |
   +-- 3. Wrong IP address



== 3. Node Improper shutdown

OR
  `+-- 1. Crash due to overheating
   +-- 2. Crash due to power supply problem (IR drop)
   +-- 3. Execution fault
   |  `OR
   |     `+-- 1. Memory error
   |      |  `OR
   |      |     `+-- 1. DRAM error
   |      |      +-- 2. Cache error
   |      |
   |      +-- 2. Kernel Oops
   |      |  `OR
   |      |     `+-- 1. Module
   |      |      +-- 2. Main binary
   |      |
   |      +-- 3. File system error
   |         `OR
   |            `+-- 1. Permanent physical corruption
   |             +-- 2. Soft physical corruption
   |             +-- 3. File system logical error
   |
   +-- 4. Crash due to power outage
      `OR
         `+-- 1. Power outage and UPS did not work
          |  `OR
          |     `+-- 1. UPS ran out of power
          |      +-- 2. UPS malfunctioned
          |
          +-- 2. Power outage and UPS did not exist

=== Detection 

  In general improper shutdown is going to be detected by the creation, deletion and 
  checking of a file (/var/improper_shutdown.lock).
  
==== 3.1
  Attempt to detect by analysis of the thermal logfiles (local or from sensor data)
==== 3.2
  Attempt to detect by analysis of the current and voltage logfiles
==== 3.3.1.1
  Perform self-test on DRAM
==== 3.3.1.2
  Perform self-test on Caches
==== 3.3.2.1
  Check the kernel monitoring logs for an error
==== 3.3.2.2
  Same as for 3.3.2.1
==== 3.3.3.1
  Perform fsck on storage devices for corrupted sectors, etc
==== 3.3.3.2
  This is probably not detectable but can be ruled out by performing an fsck and getting
  no error
==== 3.3.3.3
  Perform fsck on storage devices for file system inconsistencies
==== 3.4.1.1
  We may be able to check that through a UPS interface
==== 3.4.1.2
  Same as 3.4.1.1
==== 3.4.2
  If we are powered by a battery or renewable energy we may have a log of remaining 
  stored energy which we can analyze to find a possible exhaustion of power.


== 4. Received data do not pass sanity check

OR
  `+-- 1. Sensor sends corrupt data
   |  `OR
   |     `+-- 1. Sensor failure
   |      +-- 2. Sensor was compromised
   |
   +-- 2. Logical error at packaging software
   |  `OR
   |     `+-- 1. Unexpected value
   |      +-- 2. Software bug
   |     
   +-- 3. Logical error at sanity checker
   |  `OR
   |     `+-- 1. Occurrence of extreme condition that where not considered 
   |      |      possible
   |      +-- 2. Software bug
   |
   +-- 4. Package corruption on an intermediate node
   |  `OR
   |     `+-- 1. Software bug
   |      +-- 2. Intermediate node is compromised
   |
   +-- 5. Transportation protocol did not support package correctness assurance
          and package was corrupted on the medium



== 5. Improper exit of middleware/daemon/application

OR
  `+-- 1. Improper shutdown of the machine
   +-- 2. Application crash
      `OR
         `+-- We run out of resources
          |  `OR
          |     `+-- Storage is full
          |      +-- Out of memory
          |      +-- Killed due to too many applications
          |      +-- Too many open files
          |
          +-- Software bug
          +-- Error due to corrupted state
             `OR
                `+-- Memory corruption
                 +-- File System corruption
                 +-- Processor Corruption
                 +-- Soft error


