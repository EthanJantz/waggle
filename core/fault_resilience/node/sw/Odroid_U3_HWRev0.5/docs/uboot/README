General Information Regarding UBoot

Manual: http://www.denx.de/wiki/view/DULG/Manual

Booting process using UBoot
http://www.slideshare.net/macpaul/bootstrap-process-of-u-boot
Boot Sequence
http://processors.wiki.ti.com/index.php/Boot_Sequence


Command Line Interface: http://www.denx.de/wiki/view/DULG/UBootCommandLineInterface

IMPORTANT: Because UBoot is highly configurable maybe some commands are not supported by our uboot binary


Also, there are two types of command parsers in UBoot (http://www.denx.de/wiki/bin/view/DULG/CommandLineParsing):

Old, Simple: supports variables, several commands in one line, and variable substitution

Hush Shell: similar to Bourne Shell (allows conditional statements)
    to get an idea: man sh

    
--NOTE--
We probably should utilize the Hush Shell capabilities to allow for conditional booting.


Commands and general information
http://www.stlinux.com/u-boot/using

Info about verified UBoot
http://lwn.net/Articles/571031/

http://www.linuxjournal.com/content/handy-u-boot-trick

http://odroid.us/mediawiki/index.php?title=Mounting_Root_File_System_on_External_USB_Drive
http://odroid.us/mediawiki/index.php?title=U-boot_Topics

Installation + UBoot 
http://lkcl.net/reports/odroid-u2.html


Exynos 4412 (Odroid U3) boot info (http://dev.odroid.com/projects/4412boot/)
### Extract

    The default env provided in U-Boot will attempt the following:

    1) Load boot.scr script from the first FAT type partition from the boot media.
    2) Load boot.scr script from the second FAT type partition from the boot media.
    3) Load kernel from its on media/ramdisk position (This is the Android Boot)
###

This could potentially enable fault tolerance for boot partition corruptions (maybe we can force uboot to do a checksum before boot, or even an fsck)



=== Notes ===

==== IMINFO command ====

=> help iminfo
iminfo - print header information for application image

Usage:
iminfo addr [addr ...]
    - print header information for application image starting at
      address 'addr' in memory; this includes verification of the
      image contents (magic number, header and payload checksums)



IMPORTANT: The application image needs to be of uImage format for the iminfo command to be able to parse it. (Other formats may be supported too [zImage is not supported])

