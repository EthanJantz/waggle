.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH STRESS-NG 1 "January 16, 2014"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
stress\-ng \- a tool to load and stress a computer system
.br

.SH SYNOPSIS
.B stress\-ng
[\fIOPTION \fR[\fIARG\fR]] ...
.br

.SH DESCRIPTION
stress\-ng will stress test a computer system in various selectable ways.

.SH OPTIONS
.TP
.B \-?, \-h, \-\-help
show help.
.TP
.B \-\-affinity N
start N processes that rapidly change CPU affinity (only on Linux).
.TP
.B \-\-affinity-ops N
stop affinity processes after N bogo affinity operations (only on Linux).
.TP
.B \-a N, \-\-all N
start N instances of each stress test.
.TP
.B \-b N, \-\-backoff N
wait N microseconds between the start of each stress process. This allows one
to ramp up the stress tests over time.
.TP
.B \-c N, \-\-cpu N
start N processes computing sqrt((double)rand()). Note that the rand function
is based on a fast integer RNG with a period of about 2^60.
.TP
.B \-\-cpu\-ops N
stop cpu stress processes after N bogo operations.
.TP
.B \-l P, \-\-cpu\-load P
load CPU with P percent loading. 0 is effectivly a sleep (no load) and 100 is full loading.  The loading loop is broken into compute time (load%) and sleep time (100% - load%). Accuracy depends on the overall load of the processor and the responsiveness of the scheduler, so the actual load may be different from the desired load.  Note that the number of bogo cpu operations may not be linearly scaled with the load as some systems employ CPU frequency scaling and so heavier loads produce an increased CPU frequency and greater CPU bogo operations.
.TP
.B \-C N, \-\-cache N
start N processes that perform random wide spread memory read and writes to thrash the CPU cache.  The code does not intelligently determine the CPU cache configuration and so it may be sub-optimal in producing hit-miss read/write activity for some processors.
.TP
.B \-\-cache\-ops N
stop cache thrash processes after N bogo cache thrash operations.
.TP
.B \-n, \-\-dry-run
parse options, but don't run stress tests. A no-op.
.TP
.B \-D N, \-\-dentry N
start N processes that create and remove directory entries.
.TP
.B \-\-dentry\-ops N
stop denty thrash processes after N bogo dentry operations.
.TP
.B \-\-dentries N
create N dentries per dentry thrashing loop, default is 2048.
.TP
.B \-d N, \-\-hdd N
start N processes continually writing and removing temporary files.
.TP
.B \-\-hdd\-bytes N
write N bytes for each hdd process, the default is 1 GB.
.TP
.B \-\-hdd\-noclean
do not remove files created by hdd processes.
.TP
.B \-\-hdd\-ops N
stop hdd stress processes after N bogo operations.
.TP
.B \-F N, \-\-fallocate N
start N processes continally fallocating (preallocating file space) and ftuncating (file truncating) temporary files.  
.TP
.B \-\-fallocate\-ops N
stop fallocate stress processes after N bogo fallocate operations.
.TP
.B \-f N, \-\-fork N
start N processes continually forking children that immediately exit.
.TP
.B \-\-fork\-ops N
stop fork stress processes after N bogo operations.
.TP
.B \-\-flock N
start N processes locking on a single file.
.TP
.B \-\-flock-ops N
stop flock stress processes after N bogo flock operations.
.TP
.B \-\-float N
start N processes executing various double precision floating point operations.
.TP
.B \-\-float-ops N
stop floating point stress processes after N bogo operarions.
.TP
.B \-\-int N
start N processes executing various 64 bit integer operations.
.TP
.B \-\-int-ops N
stop integer stress processes after N bogo operarions.
.TP
.B \-i N, \-\-io N
start N processes continuously calling sync() to commit buffer cache to disk. This can be used in conjunction with the \-\-hdd options.
.TP
.B \-\-io\-ops N
stop io stress processes after N bogo operations.
.TP
.B \-\-ionice-class class
specify ionice class (only on Linux). Can be idle (default), besteffort, be, realtime, rt.
.TP
.B \-\-ionice-level level
specify ionice level (only on Linux). For idle, 0 is the only possible option. For besteffort or realtime values 0 (hightest priority) to 7 (lowest priority). See ionice(1) for more details.
.TP
.B \-\-metrics
output number of bogo operations in total performed by the stress processes. Note that these are not a reliable metric of performance or throughput and have not
been designed to be used for benchmarking whatsoever. The metrics are just a useful way to observe how a system behaves when under various kinds of load.  
.TP
.B \-m N, \-\-vm N
start N processes continuously calling mmap()/munmap() and writing to the allocated memory. Note that this can cause systems to trip the kernel OOM killer on Linux systems if not enough physical memory and swap is not available.
.TP
.B \-\-vm\-bytes N
mmap N bytes per vm process, the default is 256MB. One can specify the size in units of Bytes,
KBytes, MBytes and GBytes using the suffix b, k, m or g.
.TP
.B \-\-vm\-stride N
write to every Nth byte, the default is every page (4096 bytes). One can specify the size in
units of Bytes, KBytes, MBytes and GBytes using the suffix b, k, m or g.
.TP
.B \-\-vm\-ops N
stop vm stress processes after N bogo operations.
.TP
.B \-\-vm\-hang N
sleep N seconds before unmapping memory, the default is zero seconds. Specifying 0 will
do an infinite wait.
.TP
.B \-\-vm\-keep
don't continually unmap and map memory, just keep on re-writing to it.
.TP
.B \-\-vm\-populate
populate (prefault) page tables for the memory mappings; this can stress swapping. Only available on systems that support MAP_POPULATE (since Linux 2.5.46).
.TP
.B \-o N, \-\-open N
start N processes that perform open() and then close() operations on /dev/zero. The maximum opens at one time is system defined, so the test will run up to this maximum, or 65536 open file descriptors, which ever comes first.
.TP
.B \-\-open-ops N
stop the open stress processes after N bogo open operations.
.TP
.B \-p N, \-\-pipe N
start N processes that perform large pipe writes and reads to exercise pipe I/O. This exercises memory write and reads as well as context switching.
.TP
.B \-\-pipe\-ops N
stop pipe stress processes after N bogo pipe write operations.
.TP
.B \-q, \-\-quiet
don't show any output.
.TP
.B \-\-sem N
start N processes that perform POSIX semaphore wait and post operation. This stresses fast semaphore operations and produces rapid context switching.
.TP
.B \-\-sem-ops N
stop semaphore stress processes after N bogo semaphore operations.
.TP
.B \-S N, \-\-sock N
start N processes that perform various socket stress activity. This involves a pair of client/server processes performing rapid connect, send and receives and disconnects on the local host.
.TP
.B \-\-sched-scheduler sched
select the named scheduler (only on Linux). To see the list of available schedulers
use: stress\-ng \-\-sched which
.TP
.B \-\-sched\-prio prio
select the scheduler priority level (only on Linux). If the scheduler does not support this then
the default priority level of 0 is chosen.
.TP
.B \-\-sock-port P
start at socket port P. For N socket worker processes, ports P to P - 1 are used.
.TP
.B \-\-sock-ops N
stop socket stress processes after N bogo operations.
.TP
.B \-s N, \-\-switch N
start N processes that send messages via pipe to a child to force context switching.
.TP
.B \-\-switch\-ops N
stop context switcing processes after N bogo operations.
.TP
.B \-t N, \-\-timeout N
stop stress test after N seconds. One can also specify the units of time in
seconds, minutes, hours, days or years with the suffix s, m, h, d or y.
.TP
.B \-T N, \-\-timer N
start N processes creating timer events at a default rate of 1Mhz (Linux only); this
can create a lot of timer clock interrupts.
.TP
.B \-\-timer-ops N
stop timer stress processes after N bogo timer events (Linux only).
.TP
.B \-\-timer-freq F
run timers at F Hz; range from 1000 to 1000000000 Hz (Linux only).
.TP
.B \-u N, \-\-urandom N
start N processes reading /dev/urandom (Linux only).
.TP
.B \-\-urandom\-ops N
stop urandom stress processes after N urandom bogo read operations (Linux only).
.TP
.B \-v, \-\-verbose
show all debug, warnings and normal information output.
.TP
.B \-V, \-\-version
show version.
.TP
.B \-y N, \-\-yield N
start N process that call sched_yield(). This should force rapid context switching.
.TP
.B \-\-yield\-ops N
stop yield stress processes after N sched_yield() bogo operations.
.LP
Examples:
.LP
stress\-ng \-\-cpu 4 \-\-io 2 \-\-vm 1 \-\-vm\-bytes 256M \-\-timeout 60s
.LP
stress\-ng \-\-cpu 8 \-\-cpu\-ops 800000
.LP
stress\-ng \-\-cpu 4 \-\-io 2 \-\-timeout 60s \-\-metrics
.LP
stress\-ng \-\-fork 4 \-\-fork-ops 100000
.LP
stress-\ng --all 4 \-\-timeout 5m
.SH SEE ALSO
.BR stress (1) 
.BR ionice (1)
.BR sched_yield (2)
.BR sched_setaffinity (2)
.BR fallocate (2)
.BR ftruncate (2)
.BR flock (2)
.BR ioprio_set (2)
.SH AUTHOR
stress\-ng was written by Colin King <colin.king@canonical.com> and is a clean
room implementation of the original stress tool by Amos Waterland <apw@rossby.metr.ou.edu>.
Note that the stress-ng cpu, io, vm and hdd tests are different implementations of the original stress
tests and hence may produce different stress characteristics.
.PP
This manual page was written by Colin King <colin.king@canonical.com>,
for the Ubuntu project (but may be used by others).
