Elm.Chart = Elm.Chart || {};
Elm.Chart.make = function (_elm) {
   "use strict";
   _elm.Chart = _elm.Chart || {};
   if (_elm.Chart.values)
   return _elm.Chart.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Chart",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $QueueBuffer = Elm.QueueBuffer.make(_elm);
   var chart = F2(function (_v0,
   buf) {
      return function () {
         return function () {
            var data = $QueueBuffer.toList(buf);
            return function () {
               var _v2 = $List.unzip(data);
               switch (_v2.ctor)
               {case "_Tuple2":
                  switch (_v2._0.ctor)
                    {case "::":
                       switch (_v2._0._1.ctor)
                         {case "::": switch (_v2._1.ctor)
                              {case "::":
                                 switch (_v2._1._1.ctor)
                                   {case "::": return function () {
                                           var size = $Basics.toFloat($List.length(data));
                                           var maxSize = $Basics.toFloat($QueueBuffer.maxSize(buf));
                                           var $ = {ctor: "_Tuple2"
                                                   ,_0: 2
                                                   ,_1: 2},
                                           marginX = $._0,
                                           marginY = $._1;
                                           var w = $Basics.toFloat(_v0.width - 2 * marginX);
                                           var xOffset = w * ($Basics.toFloat(buf.available) / maxSize) / 2;
                                           var h = $Basics.toFloat(_v0.height - 2 * marginY);
                                           var ys$ = A2($List._op["::"],
                                           _v2._1._1._0,
                                           _v2._1._1._1);
                                           var xs$ = A2($List._op["::"],
                                           _v2._0._1._0,
                                           _v2._0._1._1);
                                           var dataBbox = {_: {}
                                                          ,x: {_: {}
                                                              ,max: A3($List.foldr,
                                                              $Basics.max,
                                                              _v2._0._0,
                                                              xs$)
                                                              ,min: A3($List.foldr,
                                                              $Basics.min,
                                                              _v2._0._0,
                                                              xs$)}
                                                          ,y: {_: {}
                                                              ,max: A3($List.foldr,
                                                              $Basics.max,
                                                              _v2._1._0,
                                                              ys$)
                                                              ,min: A3($List.foldr,
                                                              $Basics.min,
                                                              _v2._1._0,
                                                              ys$)}};
                                           var dataXMid = dataBbox.x.min + (dataBbox.x.max - dataBbox.x.min) / 2;
                                           var dataYMid = dataBbox.y.min + (dataBbox.y.max - dataBbox.y.min) / 2;
                                           var xScale = w * (size / maxSize) / (dataBbox.x.max - dataBbox.x.min);
                                           var yScale = h / (dataBbox.y.max - dataBbox.y.min);
                                           var fit = function (_v13) {
                                              return function () {
                                                 switch (_v13.ctor)
                                                 {case "_Tuple2":
                                                    return {ctor: "_Tuple2"
                                                           ,_0: xOffset + (_v13._0 - dataXMid) * xScale
                                                           ,_1: (_v13._1 - dataYMid) * yScale};}
                                                 _U.badCase($moduleName,
                                                 "between lines 60 and 61");
                                              }();
                                           };
                                           var dot = function (_v17) {
                                              return function () {
                                                 switch (_v17.ctor)
                                                 {case "_Tuple2":
                                                    return $Graphics$Collage.move(fit({ctor: "_Tuple2"
                                                                                      ,_0: _v17._0
                                                                                      ,_1: _v17._1}))(A2($Graphics$Collage.filled,
                                                      $Color.red,
                                                      $Graphics$Collage.circle(2)));}
                                                 _U.badCase($moduleName,
                                                 "between lines 65 and 66");
                                              }();
                                           };
                                           var latest = A3($QueueBuffer.mapLast,
                                           dot,
                                           $Graphics$Collage.toForm($Graphics$Element.empty),
                                           buf);
                                           var lineChart = $Graphics$Collage.traced($Graphics$Collage.solid($Color.black))($Graphics$Collage.path(A2($List.map,
                                           fit,
                                           data)));
                                           return A3($Graphics$Collage.collage,
                                           _v0.width,
                                           _v0.height,
                                           _L.fromArray([lineChart
                                                        ,latest]));
                                        }();}
                                   break;}
                              break;}
                         break;}
                    break;}
               return A2($Graphics$Element.spacer,
               _v0.width,
               _v0.height);
            }();
         }();
      }();
   });
   _elm.Chart.values = {_op: _op
                       ,chart: chart};
   return _elm.Chart.values;
};